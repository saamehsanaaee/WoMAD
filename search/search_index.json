{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the WoMAD model documentation page! This page will contain the documentation for our Working Memory Architecture and Demand (WoMAD) model. [Brief description of the project, where it's been published, authors, etc.; and introduction, if you will.] Here you will find information on: How the project code and repository is structured, aka the code . The detailed version of our methods used in the project. The WoMAD source code is available on GitHub .","title":"Home"},{"location":"#welcome-to-the-womad-model-documentation-page","text":"This page will contain the documentation for our Working Memory Architecture and Demand (WoMAD) model. [Brief description of the project, where it's been published, authors, etc.; and introduction, if you will.] Here you will find information on: How the project code and repository is structured, aka the code . The detailed version of our methods used in the project. The WoMAD source code is available on GitHub .","title":"Welcome to the WoMAD model documentation page!"},{"location":"the_code/","text":"The WoMAD Code Let's go through the WoMAD code: Usage, Installation, and the Structure of our Repository. Installation and Usage of the WoMAD Package [RTFM for Python packages ... please stand by for installation and usage guide ;)] The Repository Look at this refreshing tree of chaos, the structure of the repo: . \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 model_ready \u2502 \u2514\u2500\u2500 processed \u251c\u2500\u2500 docs \u2502 \u251c\u2500\u2500 img \u2502 \u251c\u2500\u2500 index.md \u2502 \u251c\u2500\u2500 logs \u2502 \u2502 \u251c\u2500\u2500 index.md \u2502 \u2502 \u2514\u2500\u2500 upcoming.md \u2502 \u251c\u2500\u2500 the_code.md \u2502 \u2514\u2500\u2500 the_science.md \u251c\u2500\u2500 figures \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 Makefile \u251c\u2500\u2500 mkdocs.yml \u251c\u2500\u2500 models \u2502 \u2514\u2500\u2500 README.md \u251c\u2500\u2500 pyproject.toml \u251c\u2500\u2500 README.md \u251c\u2500\u2500 tests \u2502 \u2514\u2500\u2500 test_all_modules.py \u251c\u2500\u2500 WoMAD \u2502 \u251c\u2500\u2500 data_module.py \u2502 \u251c\u2500\u2500 hyperparameter_module.py \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 model_setup_module.py \u2502 \u251c\u2500\u2500 model_train_module.py \u2502 \u251c\u2500\u2500 model_valid_module.py \u2502 \u251c\u2500\u2500 result_interp_module.py \u2502 \u2514\u2500\u2500 WoMAD_config.py \u2514\u2500\u2500 WoMAD_main.py Now, let's go through these files one by one.","title":"The Code"},{"location":"the_code/#the-womad-code","text":"Let's go through the WoMAD code: Usage, Installation, and the Structure of our Repository.","title":"The WoMAD Code"},{"location":"the_code/#installation-and-usage-of-the-womad-package","text":"[RTFM for Python packages ... please stand by for installation and usage guide ;)]","title":"Installation and Usage of the WoMAD Package"},{"location":"the_code/#the-repository","text":"Look at this refreshing tree of chaos, the structure of the repo: . \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 model_ready \u2502 \u2514\u2500\u2500 processed \u251c\u2500\u2500 docs \u2502 \u251c\u2500\u2500 img \u2502 \u251c\u2500\u2500 index.md \u2502 \u251c\u2500\u2500 logs \u2502 \u2502 \u251c\u2500\u2500 index.md \u2502 \u2502 \u2514\u2500\u2500 upcoming.md \u2502 \u251c\u2500\u2500 the_code.md \u2502 \u2514\u2500\u2500 the_science.md \u251c\u2500\u2500 figures \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 Makefile \u251c\u2500\u2500 mkdocs.yml \u251c\u2500\u2500 models \u2502 \u2514\u2500\u2500 README.md \u251c\u2500\u2500 pyproject.toml \u251c\u2500\u2500 README.md \u251c\u2500\u2500 tests \u2502 \u2514\u2500\u2500 test_all_modules.py \u251c\u2500\u2500 WoMAD \u2502 \u251c\u2500\u2500 data_module.py \u2502 \u251c\u2500\u2500 hyperparameter_module.py \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 model_setup_module.py \u2502 \u251c\u2500\u2500 model_train_module.py \u2502 \u251c\u2500\u2500 model_valid_module.py \u2502 \u251c\u2500\u2500 result_interp_module.py \u2502 \u2514\u2500\u2500 WoMAD_config.py \u2514\u2500\u2500 WoMAD_main.py Now, let's go through these files one by one.","title":"The Repository"},{"location":"the_science/","text":"Working Memory Architecture and Demand (WoMAD) Model The WoMAD Model: An Overview The Data: HCP-Young Adult 2025 Release WoMAD Modules: WoMAD is a modular model! Results: Interpretation and Implications","title":"The Science"},{"location":"the_science/#working-memory-architecture-and-demand-womad-model","text":"","title":"Working Memory Architecture and Demand (WoMAD) Model"},{"location":"the_science/#the-womad-model-an-overview","text":"","title":"The WoMAD Model: An Overview"},{"location":"the_science/#the-data-hcp-young-adult-2025-release","text":"","title":"The Data: HCP-Young Adult 2025 Release"},{"location":"the_science/#womad-modules-womad-is-a-modular-model","text":"","title":"WoMAD Modules: WoMAD is a modular model!"},{"location":"the_science/#results-interpretation-and-implications","text":"","title":"Results: Interpretation and Implications"},{"location":"logs/","text":"WoMAD Project Logs This page includes an overview and all the logs for the WoMAD project. Get a glance at the process (and hopefully, progess) of WoMAD: Chronological Logs Take a look at our upcoming plans for the model: Upcoming Versions and Plans Overview: Current version of WoMAD: 0.1.4 Current state: Basic structure of modules is defined through simple function and docstrings Upcoming: Populating the modules with code, sampling the dataset (10 subjects) for basic pipeline tests, and creation of a detailed outline for the documenation Chronological Logs WoMAD v0.1.0 Log #1: 2025-09-07 Created the Deploy Docs Workflow (v0.1.1) Although the code is basically thin air at this point, Saameh decided it would be a good idea to finalize the structure of the repository. So, we got our fist error. Shocking! We know! Hence, v0.1.1 was created. A mostly empty repository that has a decent, but mostly empty documentation on our GitHub page Log #2: 2025-09-09 Expanded the Documentation structure (v0.1.2) Do you see a pattern? Before outlining the actual .py files, someone decided it would be a good idea to make the document and the GitHub page for our lovely WoMAD model better . What is \"better\"? Nobody knows. Our next tasks are: Outlining all .py files and complete their description docstrings Outlining the-code.md and the-science.md files Expand main README.md file Log #3: 2025-09-10 Filled docstrings of the .py files to describe each module (v0.1.2) The .py files are now partially outlined on a very high level. The next step is to make this outline more granular and create the logical flow of the code within each module. Log #4: 2025-09-18 Outlined all .py files to create the basic structure of the modules (v0.1.3) The .py files are now properly outlined. The next step is to populate each section with their respective functions. Log #5: 2025-09-30 Created basic structure for all WoMAD modules (v0.1.4) All WoMAD .py module files now have the basic structure of the code. Functions, docstrings, paths, etc. have been added and the modules now require a \"fill in the blanks\" step to create the first iteration of the WoMAD model, ready for basic tests. Here's the exact list of changes made in the commits for v0.1.4: WoMAD_config.py included improper and lengthy variable names. They are improved now. All modules inside ./WoMAD/ directory included dashes in the names instead of underscores. This is edited to ensure proper import of the modules when necessary. All .py files now include the basic code structure that ensure the logical flow we need the data to go through. Thismeans that after the current version, if no bugs are found (LOL, right?), we can move on to create the actual code for each module which you can see in the upcoming page . Other minute changes have been made in docs, the .toml file, and other \"housekeeping\" parts of the repository that can be called \"small edits\" for now. (No mojor changes have been made in the non- .py files.)","title":"Logs"},{"location":"logs/#womad-project-logs","text":"This page includes an overview and all the logs for the WoMAD project. Get a glance at the process (and hopefully, progess) of WoMAD: Chronological Logs Take a look at our upcoming plans for the model: Upcoming Versions and Plans","title":"WoMAD Project Logs"},{"location":"logs/#overview","text":"Current version of WoMAD: 0.1.4 Current state: Basic structure of modules is defined through simple function and docstrings Upcoming: Populating the modules with code, sampling the dataset (10 subjects) for basic pipeline tests, and creation of a detailed outline for the documenation","title":"Overview:"},{"location":"logs/#chronological-logs","text":"","title":"Chronological Logs"},{"location":"logs/#womad-v010","text":"","title":"WoMAD v0.1.0"},{"location":"logs/#log-1-2025-09-07","text":"Created the Deploy Docs Workflow (v0.1.1) Although the code is basically thin air at this point, Saameh decided it would be a good idea to finalize the structure of the repository. So, we got our fist error. Shocking! We know! Hence, v0.1.1 was created. A mostly empty repository that has a decent, but mostly empty documentation on our GitHub page","title":"Log #1: 2025-09-07"},{"location":"logs/#log-2-2025-09-09","text":"Expanded the Documentation structure (v0.1.2) Do you see a pattern? Before outlining the actual .py files, someone decided it would be a good idea to make the document and the GitHub page for our lovely WoMAD model better . What is \"better\"? Nobody knows. Our next tasks are: Outlining all .py files and complete their description docstrings Outlining the-code.md and the-science.md files Expand main README.md file","title":"Log #2: 2025-09-09"},{"location":"logs/#log-3-2025-09-10","text":"Filled docstrings of the .py files to describe each module (v0.1.2) The .py files are now partially outlined on a very high level. The next step is to make this outline more granular and create the logical flow of the code within each module.","title":"Log #3: 2025-09-10"},{"location":"logs/#log-4-2025-09-18","text":"Outlined all .py files to create the basic structure of the modules (v0.1.3) The .py files are now properly outlined. The next step is to populate each section with their respective functions.","title":"Log #4: 2025-09-18"},{"location":"logs/#log-5-2025-09-30","text":"Created basic structure for all WoMAD modules (v0.1.4) All WoMAD .py module files now have the basic structure of the code. Functions, docstrings, paths, etc. have been added and the modules now require a \"fill in the blanks\" step to create the first iteration of the WoMAD model, ready for basic tests. Here's the exact list of changes made in the commits for v0.1.4: WoMAD_config.py included improper and lengthy variable names. They are improved now. All modules inside ./WoMAD/ directory included dashes in the names instead of underscores. This is edited to ensure proper import of the modules when necessary. All .py files now include the basic code structure that ensure the logical flow we need the data to go through. Thismeans that after the current version, if no bugs are found (LOL, right?), we can move on to create the actual code for each module which you can see in the upcoming page . Other minute changes have been made in docs, the .toml file, and other \"housekeeping\" parts of the repository that can be called \"small edits\" for now. (No mojor changes have been made in the non- .py files.)","title":"Log #5: 2025-09-30"},{"location":"logs/upcoming/","text":"WoMAD v0.2.0 Data Acquisition & Preprocessing Tasks: Develop functions to download the data Parse the dataset and isolate trials using the EV files Normalize data and save to a DataFrame WoMAD v0.3.0 Core Model Development Tasks: Define PyTorch Dataset and DataLoader Create the 3D U-Net model (segmentation module) Create a training loop (K-fold cross-validation) WoMAD v0.4.0 Parallel Modules & Fusion Module Tasks: Build the feature extraction modules: Temporal module Spatiotemporal module GNN Build the final fusion layer that combines their outputs WoMAD v0.5.0 Complete Model Evaluation & Interpretation Tasks: Evaluate model performance Save model predictions as NIfTI files Save (evaluation and prediction) plots WoMAD v1.0.0 First \"release\" of the \"final\" version of WoMAD Tasks: Finalize all code (well ... as final as it can be) Finalize documentation Add findings to The Science page","title":"Upcoming"},{"location":"logs/upcoming/#womad-v020","text":"Data Acquisition & Preprocessing Tasks: Develop functions to download the data Parse the dataset and isolate trials using the EV files Normalize data and save to a DataFrame","title":"WoMAD v0.2.0"},{"location":"logs/upcoming/#womad-v030","text":"Core Model Development Tasks: Define PyTorch Dataset and DataLoader Create the 3D U-Net model (segmentation module) Create a training loop (K-fold cross-validation)","title":"WoMAD v0.3.0"},{"location":"logs/upcoming/#womad-v040","text":"Parallel Modules & Fusion Module Tasks: Build the feature extraction modules: Temporal module Spatiotemporal module GNN Build the final fusion layer that combines their outputs","title":"WoMAD v0.4.0"},{"location":"logs/upcoming/#womad-v050","text":"Complete Model Evaluation & Interpretation Tasks: Evaluate model performance Save model predictions as NIfTI files Save (evaluation and prediction) plots","title":"WoMAD v0.5.0"},{"location":"logs/upcoming/#womad-v100","text":"First \"release\" of the \"final\" version of WoMAD Tasks: Finalize all code (well ... as final as it can be) Finalize documentation Add findings to The Science page","title":"WoMAD v1.0.0"}]}